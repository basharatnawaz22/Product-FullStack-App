{"ast":null,"code":"var _jsxFileName = \"/Users/basharat.nawaz/fourth-app/Product-App-FrontEnd/src/screens/AddReview.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { Button, Container, Form } from \"react-bootstrap\";\nimport { useParams } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddReview = () => {\n  _s();\n\n  const [rating, setRating] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const {\n    id\n  } = useParams();\n\n  const AddReviewHandler = async e => {\n    const data = {\n      rating: rating,\n      product_id: id,\n      description: description\n    };\n    await axios.post(`/api/reviews/addreview/${id}`, data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"mt-5 p-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center\",\n        children: \"Add Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: AddReviewHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"exampleForm.ControlInput1\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Rating\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            value: rating,\n            onChange: e => setRating(e.target.value),\n            type: \"number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"exampleForm.ControlTextarea1\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            value: description,\n            onChange: e => setDescription(e.target.value),\n            type: \"text\",\n            rows: 3\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n          href: `/product/${id}`,\n          children: \"Product Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(AddReview, \"UPG8WU1HRZLMGqhgmPCyEImgs8I=\", false, function () {\n  return [useParams];\n});\n\n_c = AddReview;\nexport default AddReview;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddReview\");","map":{"version":3,"sources":["/Users/basharat.nawaz/fourth-app/Product-App-FrontEnd/src/screens/AddReview.jsx"],"names":["axios","React","useState","Button","Container","Form","useParams","AddReview","rating","setRating","description","setDescription","id","AddReviewHandler","e","data","product_id","post","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,IAA5B,QAAwC,iBAAxC;AACA,SAASC,SAAT,QAA0B,cAA1B;;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,EAAD,CAA9C;AAEA,QAAM;AAAEU,IAAAA;AAAF,MAASN,SAAS,EAAxB;;AAEA,QAAMO,gBAAgB,GAAG,MAAOC,CAAP,IAAa;AACpC,UAAMC,IAAI,GAAG;AACXP,MAAAA,MAAM,EAAEA,MADG;AAEXQ,MAAAA,UAAU,EAAEJ,EAFD;AAGXF,MAAAA,WAAW,EAAEA;AAHF,KAAb;AAKA,UAAMV,KAAK,CAACiB,IAAN,CAAY,0BAAyBL,EAAG,EAAxC,EAA2CG,IAA3C,CAAN;AACD,GAPD;;AASA,sBACE;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,UAArB;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEF,gBAAhB;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,MAAtB;AAA6B,UAAA,SAAS,EAAC,2BAAvC;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,YAAA,KAAK,EAAEL,MADT;AAEE,YAAA,QAAQ,EAAGM,CAAD,IAAOL,SAAS,CAACK,CAAC,CAACI,MAAF,CAASC,KAAV,CAF5B;AAGE,YAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eASE,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,MAAtB;AAA6B,UAAA,SAAS,EAAC,8BAAvC;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,YAAA,KAAK,EAAET,WADT;AAEE,YAAA,QAAQ,EAAGI,CAAD,IAAOH,cAAc,CAACG,CAAC,CAACI,MAAF,CAASC,KAAV,CAFjC;AAGE,YAAA,IAAI,EAAC,MAHP;AAIE,YAAA,IAAI,EAAE;AAJR;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,eAkBE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlBF,EAkBsC,GAlBtC,eAmBE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAG,YAAWP,EAAG,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA6BD,CA5CD;;GAAML,S;UAIWD,S;;;KAJXC,S;AA8CN,eAAeA,SAAf","sourcesContent":["import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { Button, Container, Form } from \"react-bootstrap\";\nimport { useParams } from \"react-router\";\n\nconst AddReview = () => {\n  const [rating, setRating] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  const { id } = useParams();\n\n  const AddReviewHandler = async (e) => {\n    const data = {\n      rating: rating,\n      product_id: id,\n      description: description,\n    };\n    await axios.post(`/api/reviews/addreview/${id}`, data);\n  };\n\n  return (\n    <>\n      <Container className=\"mt-5 p-2\">\n        <h1 className=\"text-center\">Add Product</h1>\n        <hr />\n        <Form onSubmit={AddReviewHandler}>\n          <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n            <Form.Label>Rating</Form.Label>\n            <Form.Control\n              value={rating}\n              onChange={(e) => setRating(e.target.value)}\n              type=\"number\"\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n            <Form.Label>Description</Form.Label>\n            <Form.Control\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n              type=\"text\"\n              rows={3}\n            />\n          </Form.Group>\n          <Button type=\"submit\">Save</Button>{\" \"}\n          <Button href={`/product/${id}`}>Product Details</Button>\n        </Form>\n      </Container>\n    </>\n  );\n};\n\nexport default AddReview;\n"]},"metadata":{},"sourceType":"module"}